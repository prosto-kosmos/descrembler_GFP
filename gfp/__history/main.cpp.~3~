// ---------------------------------------------------------------------------

#include <vcl.h>
#include <stdio.h>
#include <conio.h>
#include <iostream>
#include <stdint.h>
#include <gfp.cpp>
#include <crc16.cpp>


using namespace std;

class CRC16 {
public:
	CRC16() {
		crc = 0;
	};

	uint16_t processByte(uint8_t data) {
		uint8_t i;
		crc = crc ^ ((uint16_t)data << 8);
		for (i = 0; i < 8; i++) {
			if (crc & 0x8000)
				crc = (crc << 1) ^ 0x1021;
			else
				crc <<= 1;
		}
		return crc;
	};

	uint16_t getCrc() {
		return crc;
	};

private:
	uint16_t crc;
};


int main(int argc, char* argv[]) {
	const char* out_filename;
	const char* in_filename;

	in_filename = "gfp5.bin";
	out_filename = "out.ips";

	/*
	if (argc != 3) {
	printf("Please specify the parameters: descrembler_GFP <path_input_file> <path_output_file>\n"
	);
	printf("Press any key to continue...\n");
	getch();
	return 0;
	}

	in_filename = argv[1];
	out_filename = argv[2]; */

	FILE *f, *of;
	f = fopen(in_filename, "rb");
	of = fopen(out_filename, "wb");

	if (!f) {
		cout << "No find file: " << in_filename << endl;
		cout << endl << "\nPress any key to continue...";
		getch();
		return 0;
	}
	cout << "Open file: " << in_filename << endl;

	GFP gfp;
	gfp.runGFP(f, of);

	fclose(f);
	fclose(of);
	cout << endl << "\nPress any key to continue...";
	getch();
	return 0;
}
// ---------------------------------------------------------------------------
